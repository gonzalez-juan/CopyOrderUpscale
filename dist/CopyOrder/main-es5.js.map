{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","event","window","parent","postMessage","type","data","height","addEventListener","console","log","keys","orderId","handleEvent","messageEvent","alert","clicked","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  title = 'Copy order';\n  \n  event: String = '';\n  \n  ngOnInit() :  void {\n    //this runs when the comonent is rendered\n\n    window.parent.postMessage ({type:'initialized'}, \"*\")\n    window.parent.postMessage ({type:'sizeChange', data: {height: 300}}, \"*\")\n\n    window.addEventListener (\n      \"message\",\n      event => {\n        console.log(\"event\", event.data.keys.orderId)\n        this.handleEvent(event.data.keys.orderId)\n      }\n    )\n\n  }\n\n  handleEvent(messageEvent: any) {\n    this.event = messageEvent\n  }\n  \n  clicked() {\n    alert (this.event)\n  }\n\n \n}\n\n","<div>\n    <h2> Events received: </h2>\n     orderId is {{event}}\n    <button (click) = \"clicked()\">Copy Order</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}